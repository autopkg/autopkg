---
name: Test AutoPkg

on:
  push:
    # https://github.community/t/how-to-trigger-an-action-on-push-or-pull-request-but-not-both/16662
    branches:
      - master
    paths:
      - "**.py"
      - "requirements.txt"
      - ".github/workflows/tests.yaml"
      - "tests/Test-Recipes/AutopkgCore.test.recipe.yaml"
  pull_request:
    branches:
      - dev
    paths:
      - "**.py"
      - "requirements.txt"
      - ".github/workflows/tests.yaml"
      - "tests/Test-Recipes/AutopkgCore.test.recipe.yaml"

jobs:
  unittests:
    strategy:
      matrix:
        # https://ncorti.com/blog/howto-github-actions-build-matrix
        # ubuntu-latest, macos-latest, windows-latest
        os: [macos-latest, windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      # only needed on self hosted windows runners:
      #   This has no effect on GitHub hosted Windows runners
      - name: set powershell execution policy CurrentUser
        if: runner.os == 'Windows'
        shell: cmd
        run: powershell -command "Set-ExecutionPolicy -Force -ExecutionPolicy RemoteSigned -Scope CurrentUser"

      - name: checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.10.4

      - name: Set up Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: 1.7.0

      - name: Set token
        # required for githubreleaseinfoprovider in github actions
        # without this, API limits will be hit
        run: |
          cd ~
          echo ${{ secrets.GITHUB_TOKEN }} > ".autopkg_gh_token"

      - name: Install requirements
        run: make ".venv"

      - name: create empty autopkg config file - Windows
        # https://stackoverflow.com/questions/57946173/github-actions-run-step-on-specific-os
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          if not exist "%USERPROFILE%/AppData/Local/Autopkg" mkdir "%USERPROFILE%/AppData/Local/Autopkg"
          if not exist "%USERPROFILE%/AppData/Local/Autopkg/config.json" echo {} > "%USERPROFILE%/AppData/Local/Autopkg/config.json"

      - name: create empty autopkg config file - Linux
        if: runner.os == 'Linux'
        run: |
          cd ~ && mkdir -p .config/Autopkg
          cd ~ && echo {} > .config/Autopkg/config.json

      - name: run unittests
        run: make test

      - name: run end-to-end integration tests
        run: make e2e_tests

      - name: run integration recipe
        # using recipe path to NOT rely on prefs or current working directory
        run: poetry run autopkg run -vv tests/Test-Recipes/AutopkgCore.test.recipe.yaml
